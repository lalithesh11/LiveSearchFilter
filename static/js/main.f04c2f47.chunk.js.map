{"version":3,"sources":["Error.jsx","Navbar.jsx","SResult.jsx","Search.jsx","App.jsx","index.js"],"names":["Error","Navbar","className","exact","activeClassName","to","SResult","props","imgUrl","inpVal","src","alt","Search","useState","img","setImg","type","val","placeholder","onChange","e","data","target","value","console","log","App","path","render","component","ReactDom","document","getElementById"],"mappings":"+KAUeA,EARH,WACR,OACI,mCACA,0D,OCsBOC,EAvBF,WACb,OACI,mCACA,qBAAKC,UAAU,aAAf,SAMQ,cAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,eAAeC,GAAG,2BAAjD,yB,QCEGC,EAbD,SAACC,GAGX,IAAMC,EAAO,uCAAD,OAAwCD,EAAME,QAC1D,OACI,mCAEA,qBAAKC,IAAKF,EAAQG,IAAI,cCuBfC,EA7BA,WAAO,IAAD,EAEEC,mBAAS,IAFX,mBAEbC,EAFa,KAERC,EAFQ,KAWnB,OACE,qCACE,qBAAKb,UAAU,YAAf,SACE,uBACEc,KAAK,OACLC,IAAKH,EACLI,YAAY,kBACZC,SAdQ,SAACC,GACf,IAAMC,EAAOD,EAAEE,OAAOC,MACtBC,QAAQC,IAAIJ,GAEZN,EAAOM,QAcL,qBAAKnB,UAAU,UAAf,SACe,KAANY,EAAS,KAAK,cAAC,EAAD,CAASL,OAAQK,UCqB/BY,EArCL,WAMN,OACI,qCAEA,cAAC,EAAD,IAIR,eAAC,IAAD,WAKA,cAAC,IAAD,CAAOvB,OAAK,EAACwB,KAAK,qBAAqBC,OAAQ,kBAAI,cAAC,EAAD,OAWhD,cAAC,IAAD,CAAOD,KAAK,2BAA2BE,UAAWjB,IAClD,cAAC,IAAD,CAAOiB,UAAW,kBAAI,cAAC,EAAD,c,MChCzBC,IAASF,OACT,cAAC,IAAD,UACA,cAAC,EAAD,MACiBG,SAASC,eAAe,W","file":"static/js/main.f04c2f47.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Error=()=>{\r\n    return (\r\n        <>\r\n        <h1> Oops! page not found</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error;","import React from \"react\";\r\n// import {Link} from \"react-router-dom\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar=()=>{\r\nreturn(\r\n    <>\r\n    <div className=\"menu_style\">\r\n\r\n{/*Both Link & NavLink are same.But for NavLink, we can use the activeClassName attribute to show which class is active when clicked */}\r\n{/* If we dont use exact, alreday active link wont be inactivated */}\r\n            {/* <NavLink exact activeClassName=\"active_class\" to=\"/\">About Us</NavLink> */}\r\n            {/* <NavLink exact activeClassName=\"active_class\" to=\"/contact\">Contact Us</NavLink> */}\r\n            <NavLink exact activeClassName=\"active_class\" to=\"/LiveSearchFilter/search\">Search</NavLink>\r\n            {/* <NavLink exact activeClassName=\"active_class\" to=\"/services\">Services</NavLink> */}\r\n            {/* <NavLink exact activeClassName=\"active_class\" to=\"/contact/name\">Names</NavLink> */}\r\n            {/* <NavLink exact activeClassName=\"active_class\" to=\"/user\">User</NavLink> */}\r\n\r\n            {/* If user click on user, by default, we can route to the lalithesh/akula*/}\r\n            {/* <NavLink exact activeClassName=\"active_class\" to=\"/user/lalithesh/akula\">User</NavLink> */}\r\n\r\n\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst SResult=(props)=>{\r\n\r\n    // Go to https://source.unsplash.com/\r\n    const imgUrl=`https://source.unsplash.com/400x300?${props.inpVal}`;\r\n    return (\r\n        <>\r\n        {/* alternative(alt) is mandatory in React */}\r\n        <img src={imgUrl} alt=\"search\"/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SResult;","import React, { useState } from \"react\";\r\nimport SResult from \"./SResult\";\r\n\r\nconst Search = () => {\r\n    \r\n  const[img, setImg] = useState(\"\");\r\n\r\n  const InpEvnt = (e) => {\r\n    const data = e.target.value;\r\n    console.log(data);\r\n    \r\n    setImg(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"searchbar\">\r\n        <input\r\n          type=\"text\"\r\n          val={img}\r\n          placeholder=\"Search Anything\"\r\n          onChange={InpEvnt}></input>\r\n\r\n        {/* <h1>This is Search page</h1> */}\r\n      </div>\r\n      <div className=\"SResult\">\r\n              {img===\"\"?null:<SResult inpVal={img}/>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport {Route,Switch} from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport Error from \"./Error\";\r\nimport Navbar from \"./Navbar\"\r\nimport Services from \"./Services\";\r\nimport User from \"./User\";\r\nimport Search from \"./Search\";\r\n\r\nconst App=()=>{\r\n\r\n    const Name=()=>{\r\n        return <h1>This is Name Page</h1>\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        <Navbar />\r\n\r\n\r\n\r\n<Switch>\r\n\r\n{/* <Route exact path=\"/\" render={()=><About name={'Lalithesh'}/>}/> */}\r\n{/* <Route exact path=\"/\" render={()=><Search />}/> */}\r\n{/* For github, use the below Route */}\r\n<Route exact path=\"/LiveSearchFilter/\" render={()=><Search />}/>\r\n{/* <Route exact  path=\"/contact\" component={Contact}/> */}\r\n   {/* <Route path=\"/services\" render={()=><Services val={'will do all kind of services'}/>}/> */}\r\n   {/* <Route path=\"/contact/name\" component={Name}/> */}\r\n   {/* If user gives anything extra after user, we can take that value by writing /:name(not mandatory name , we can give anything). So user given value will be stored /accessed by name variable */}\r\n   {/* <Route path=\"/user/:name\" component={User}/> */}\r\n\r\n   {/* In case , if we have multiple parameters in url, we can add extra variable.But, we should pass two parameters without missing. In case if we pass only one parameter, it will route to error component*/}\r\n   {/* <Route path=\"/user/:fname/:lname\" component={User}/> */}\r\n   {/* <Route path=\"/search\" component={Search}/> */}\r\n   {/* For github, use the below Route */}\r\n   <Route path=\"/LiveSearchFilter/search\" component={Search}/>\r\n   <Route component={()=><Error/>}/>\r\n\r\n</Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport \"./index.css\"\r\n\r\n\r\nReactDom.render(\r\n<BrowserRouter>\r\n<App />\r\n</BrowserRouter>,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}